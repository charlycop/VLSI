--
-- Generated by VASY
--
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY annale_2018 IS
PORT(
  prog	: IN STD_LOGIC_VECTOR(1 DOWNTO 0);
  prog_en	: IN STD_LOGIC;
  ck	: IN STD_LOGIC;
  run	: OUT STD_LOGIC;
  compte	: OUT SIGNED(31 DOWNTO 0)
);
END annale_2018;

ARCHITECTURE RTL OF annale_2018 IS
  SIGNAL rtl_signed_31	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_30	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_29	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_28	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_27	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_26	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_25	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_24	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_23	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_22	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtl_std_logic_vector_21	: STD_LOGIC_VECTOR(31 DOWNTO 0);
  SIGNAL rtl_std_logic_vector_20	: STD_LOGIC_VECTOR(31 DOWNTO 0);
  SIGNAL rtl_signed_19	: SIGNED(0 DOWNTO 0);
  SIGNAL rtl_signed_18	: SIGNED(0 DOWNTO 0);
  SIGNAL rtl_signed_17	: SIGNED(0 DOWNTO 0);
  SIGNAL rtl_signed_16	: SIGNED(0 DOWNTO 0);
  SIGNAL rtl_signed_15	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_std_logic_vector_14	: STD_LOGIC_VECTOR(31 DOWNTO 0);
  SIGNAL rtl_signed_13	: SIGNED(0 DOWNTO 0);
  SIGNAL rtl_std_logic_12	: STD_LOGIC;
  SIGNAL rtl_bit_11	: BIT;
  SIGNAL rtl_signed_10	: SIGNED(0 DOWNTO 0);
  SIGNAL rtl_std_logic_9	: STD_LOGIC;
  SIGNAL rtl_bit_8	: BIT;
  SIGNAL rtl_signed_7	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_6	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_5	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_4	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_3	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_2	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtl_signed_1	: SIGNED(31 DOWNTO 0);
  SIGNAL rtl_unsigned_0	: UNSIGNED(31 DOWNTO 0);
  SIGNAL rtldef_1	: SIGNED(0 TO 0);
  SIGNAL rtldef_0	: SIGNED(0 TO 0);
  SIGNAL compteur	: SIGNED(31 DOWNTO 0);
  SIGNAL run_s	: STD_LOGIC;
  SIGNAL prog_s	: STD_LOGIC_VECTOR(1 DOWNTO 0);
  SIGNAL p25_1_reddef_6	: SIGNED(31 DOWNTO 0);
  SIGNAL p25_1_def_5	: BOOLEAN;
  SIGNAL p25_1_def_4	: BOOLEAN;
  SIGNAL p25_1_def_3	: BOOLEAN;
BEGIN
  rtl_signed_31 <= signed(rtl_unsigned_30);
  rtl_unsigned_30 <= unsigned'("00000000000000000000001000000000");
  rtl_signed_29 <= signed(rtl_unsigned_28);
  rtl_unsigned_28 <= unsigned'("00000000000000000000000110000000");
  rtl_signed_27 <= signed(rtl_unsigned_26);
  rtl_unsigned_26 <= unsigned'("00000000000000000000000100000000");
  rtl_signed_25 <= signed((rtl_std_logic_vector_20 AND "00000000000000000000000000000000"));
  rtl_signed_24 <= signed(rtl_std_logic_vector_21);
  rtl_signed_23 <= signed(rtl_unsigned_22);
  rtl_unsigned_22 <= unsigned'("00000000000000000000000000000001");
  rtl_std_logic_vector_21 <= (rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1
 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1
 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1
 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1
);
  rtl_std_logic_vector_20 <= (rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0
 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0
 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0
 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0
);
  rtl_signed_19(0) <= signed'("0");
  rtl_signed_18(0) <= signed'("1");
  rtl_signed_17(0) <= signed'("0");
  rtl_signed_16(0) <= signed'("1");
  rtl_signed_15 <= signed(rtl_std_logic_vector_14);
  rtl_std_logic_vector_14 <= ((rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(31))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(30))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(29))) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(28)
)) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(27))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(26))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(25))) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(24)
)) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(23))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(22))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(21))) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(20)
)) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(19))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(18))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(17))) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(16)
)) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(15))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(14))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(13))) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(12)
)) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(11))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(10))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(9))) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(8)
)) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(7))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(6))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(5))) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(4)
)) & (rtl_signed_13(0) AND (rtl_signed_10(0) AND p25_1_reddef_6(3))) & (rtl_signed_13(0)
 AND (rtl_signed_10(0) AND p25_1_reddef_6(2))) & (rtl_signed_13(0) AND (rtl_signed_10(0)
 AND p25_1_reddef_6(1))) & (rtl_signed_13(0) AND (p25_1_reddef_6(0) AND rtl_signed_10(0)
)));
  rtl_signed_13(0) <= rtl_std_logic_12;
  rtl_std_logic_12 <= to_stdulogic(rtl_bit_11);
  rtl_signed_10(0) <= rtl_std_logic_9;
  rtl_std_logic_9 <= to_stdulogic(rtl_bit_8);
  rtl_signed_7 <= signed(rtl_unsigned_6);
  rtl_unsigned_6 <= unsigned'("00000000000000000000000011000000");
  rtl_signed_5 <= signed(rtl_unsigned_4);
  rtl_unsigned_4 <= unsigned'("00000000000000000000000000000000");
  rtl_signed_3 <= signed(rtl_unsigned_2);
  rtl_unsigned_2 <= unsigned'("00000000000000000000000010000000");
  rtl_signed_1 <= signed(rtl_unsigned_0);
  rtl_unsigned_0 <= unsigned'("00000000000000000000000000000000");
  compte <= compteur;
  run <= (run_s AND prog_en);
  run_s <= '1' WHEN (((((compteur >= rtl_signed_1) AND (compteur <= rtl_signed_3)) AND (prog = "00"
)) OR (((compteur >= rtl_signed_5) AND (compteur <= rtl_signed_7)) AND ((prog = "01"
) OR (prog = "10")))) OR (prog = "11")) ELSE
     '0';
  PROCESS ( prog, prog_en )
  BEGIN
    IF (prog_en = '1')
    THEN prog_s <= prog;
    END IF;
  END PROCESS;
  PROCESS ( ck )
  BEGIN
    IF  ((ck = '1') AND ck'EVENT)
    THEN 
    IF ((prog_s(1) OR prog_s(0)) = '1')
    THEN compteur <= rtl_signed_15;
    END IF;
    END IF;
  END PROCESS;
  rtl_bit_11 <= '1' WHEN NOT(((prog_s = "00") AND (compteur > rtl_signed_31))) ELSE
     '0';
  rtl_bit_8 <= '1' WHEN NOT(((prog_s = "01") AND (compteur > rtl_signed_29))) ELSE
     '0';
  rtldef_1 <= rtl_signed_16(0) WHEN NOT(p25_1_def_5) ELSE
     rtl_signed_17(0);
  rtldef_0 <= rtl_signed_18(0) WHEN p25_1_def_5 ELSE
     rtl_signed_19(0);
  p25_1_reddef_6 <= (rtl_signed_25 OR (rtl_signed_24 AND (compteur + rtl_signed_23)));
  p25_1_def_5 <= ((prog_s = "10") AND (compteur > rtl_signed_27));
END RTL;
